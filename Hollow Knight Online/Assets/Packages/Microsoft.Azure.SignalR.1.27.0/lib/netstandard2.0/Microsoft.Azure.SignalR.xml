<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Azure.SignalR</name>
    </assembly>
    <members>
        <member name="T:Microsoft.AspNetCore.Builder.AzureSignalRApplicationBuilderExtensions">
            <summary>
            Extension methods for <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.AzureSignalRApplicationBuilderExtensions.UseAzureSignalR(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{Microsoft.Azure.SignalR.ServiceRouteBuilder})">
            <summary>
            Adds Azure SignalR Service to the <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/> request execution pipeline.
            </summary>
            <param name="app">The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</param>
            <param name="configure">A callback to configure the <see cref="T:Microsoft.Azure.SignalR.ServiceRouteBuilder"/>.</param>
            <returns>The same instance of the <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/> for chaining.</returns>
        </member>
        <member name="T:Microsoft.Azure.SignalR.ClientConnectionContext">
            <summary>
            The client connection context
            </summary>
            <code>
              ------------------------- Client Connection-------------------------------                   ------------Service Connection---------
             |                                      Transport              Application  |                 |   Transport              Application  |
             | ========================            =============         ============   |                 |  =============         ============   |
             | |                      |            |   Input   |         |   Output |   |                 |  |   Input   |         |   Output |   |
             | |      User's          |  /-------  |     |---------------------|    |   |    /-------     |  |     |---------------------|    |   |
             | |      Delegated       |  \-------  |     |---------------------|    |   |    \-------     |  |     |---------------------|    |   |
             | |      Handler         |            |           |         |          |   |                 |  |           |         |          |   |
             | |                      |            |           |         |          |   |                 |  |           |         |          |   |
             | |                      |  -------\  |     |---------------------|    |   |    -------\     |  |     |---------------------|    |   |
             | |                      |  -------/  |     |---------------------|    |   |    -------/     |  |     |---------------------|    |   |
             | |                      |            |   Output  |         |   Input  |   |                 |  |   Output  |         |   Input  |   |
             | ========================            ============         ============    |                 |  ============         ============    |
              --------------------------------------------------------------------------                   ---------------------------------------
            </code>
        </member>
        <member name="M:Microsoft.Azure.SignalR.ClientConnectionContext.CancelOutgoing(System.Boolean)">
            <summary>
            Cancel the outgoing process
            </summary>
        </member>
        <member name="M:Microsoft.Azure.SignalR.ClientConnectionContext.ForwardMessage(Microsoft.Azure.SignalR.Protocol.ConnectionDataMessage)">
            <summary>
            Forward message to service
            </summary>
        </member>
        <member name="M:Microsoft.Azure.SignalR.DefaultEndpointRouter.GetNegotiateEndpoint(Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IEnumerable{Microsoft.Azure.SignalR.ServiceEndpoint})">
            <summary>
            Select an endpoint for negotiate request
            </summary>
            <param name="context">The http context of the incoming request</param>
            <param name="endpoints">All the available endpoints</param>
        </member>
        <member name="M:Microsoft.Azure.SignalR.DefaultEndpointRouter.GetNegotiateEndpoints(System.Collections.Generic.IEnumerable{Microsoft.Azure.SignalR.ServiceEndpoint})">
            <summary>
            Only primary endpoints will be returned by client /negotiate
            If no primary endpoint is available, promote one secondary endpoint
            </summary>
            <returns>The available endpoints</returns>
        </member>
        <member name="M:Microsoft.Azure.SignalR.DefaultEndpointRouter.GetEndpointAccordingToWeight(Microsoft.Azure.SignalR.ServiceEndpoint[])">
            <summary>
             Choose endpoint randomly by weight. 
             The weight is defined as (the remaining connection quota / the connection capacity).
            </summary>
        </member>
        <member name="M:Microsoft.Azure.SignalR.IEndpointRouter.GetNegotiateEndpoint(Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IEnumerable{Microsoft.Azure.SignalR.ServiceEndpoint})">
            <summary>
            Get the service endpoint for the client to connect to
            </summary>
            <param name="context">The http context of the incoming request</param>
            <param name="endpoints">All the available endpoints</param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Azure.SignalR.GracefulShutdownOptions.Mode">
            <summary>
            This mode defines the server's behavior after receiving a `Ctrl+C` (SIGINT).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.SignalR.GracefulShutdownOptions.Timeout">
            <summary>
            Specifies the timeout of a graceful shutdown process (in seconds). 
            Default value is 30 seconds.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.SignalR.ServiceHubConnectionContext">
            <summary>
            ServiceHubConnectionContext is only passed to IUserIdProvider.GetUserId as a parameter.
            Only HttpContext and User properties are available for access.
            Exception will be thrown when other properties are accessed.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.SignalR.ServiceUserIdFeature">
            <summary>
            When clients negotiate with Management SDK and connect to SignalR server, the <see cref="T:Microsoft.AspNetCore.SignalR.IUserIdProvider"/> might not work as the user Id is set directly in the Management SDK.
            To make <see cref="P:Microsoft.AspNetCore.SignalR.HubConnectionContext.UserIdentifier"/> have the valid value in this case, we should set it before the server can access it. <see cref="M:Microsoft.AspNetCore.SignalR.HubLifetimeManager`1.OnConnectedAsync(Microsoft.AspNetCore.SignalR.HubConnectionContext)"/> is the only chance we can set the value. However, we cannot access the <see cref="F:Microsoft.Azure.SignalR.Constants.ClaimType.UserId"/> as ASRS system claims're trimmed there. <see cref="P:Microsoft.AspNetCore.SignalR.HubConnectionContext.Features"/> is the place where we can store the user Id.
            https://github.com/dotnet/aspnetcore/blob/v6.0.9/src/SignalR/server/Core/src/HubConnectionHandler.cs#L132-L141
            </summary>
        </member>
        <member name="T:Microsoft.Azure.SignalR.ServiceOptions">
            <summary>
            Configurable options when using Azure SignalR Service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.SignalR.ServiceOptions.ConnectionString">
            <summary>
            Gets or sets the connection string of Azure SignalR Service instance.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.SignalR.ServiceOptions.ConnectionCount">
            <summary>
            Gets or sets the initial number of connections per hub from SDK to Azure SignalR Service. Default value is 5. 
            Usually keep it as the default value is enough. During runtime, the SDK might start new server connections for performance tuning or load balancing. 
            When you have big number of clients, you can give it a larger number for better throughput.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.SignalR.ServiceOptions.InitialHubServerConnectionCount">
            <summary>
            Gets or sets the initial number of connections per hub from SDK to Azure SignalR Service.
            Default value is 5. 
            Usually keep it as the default value is enough. When you have big number of clients, you can give it a larger number for better throughput.
            During runtime, the SDK might start new server connections for performance tuning or load balancing. 
            </summary>
        </member>
        <member name="P:Microsoft.Azure.SignalR.ServiceOptions.MaxHubServerConnectionCount">
            <summary>
            Specifies the max server connection count allowed per hub from SDK to Azure SignalR Service. 
            During runtime, the SDK might start new server connections for performance tuning or load balancing.
            By default a new server connection starts whenever needed.
            When the max allowed server connection count is configured, the SDK does not start new connections when server connection count reaches the limit.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.SignalR.ServiceOptions.ApplicationName">
            <summary>
            Gets applicationName, which will be used as a prefix to apply to each hub name. 
            Should be prefixed with alphabetic characters and only contain alpha-numeric characters or underscore.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.SignalR.ServiceOptions.ClaimsProvider">
            <summary>
            Gets or sets the func to generate claims from <see cref="T:Microsoft.AspNetCore.Http.HttpContext" />.
            The claims will be included in the auto-generated token for clients.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.SignalR.ServiceOptions.DiagnosticClientFilter">
            <summary>
            Gets or sets the func to set diagnostic client filter from <see cref="T:Microsoft.AspNetCore.Http.HttpContext" />.
            The clients will be regarded as diagnostic client only if the function returns true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.SignalR.ServiceOptions.AccessTokenLifetime">
            <summary>
            Gets or sets the lifetime of auto-generated access token, which will be used to authenticate with Azure SignalR Service.
            Default value is one hour.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.SignalR.ServiceOptions.AccessTokenAlgorithm">
            <summary>
            Gets or sets the access token generate algorithm, supports HmacSha256 or HmacSha512
            Default value is HmacSha256
            </summary>
        </member>
        <member name="P:Microsoft.Azure.SignalR.ServiceOptions.Endpoints">
            <summary>
            Gets or sets list of endpoints
            </summary>
        </member>
        <member name="P:Microsoft.Azure.SignalR.ServiceOptions.ServerStickyMode">
            <summary>
            Specifies the mode for server sticky, when client is always routed to the server which it first /negotiate with, we call it "server sticky mode".
            By default it is disabled
            </summary>
        </member>
        <member name="P:Microsoft.Azure.SignalR.ServiceOptions.GracefulShutdown">
            <summary>
            Specifies if the client-connection assigned to this server can be migrated to another server.
            Default value is 0.
            1: Only migrate client-connection if server was shutdown gracefully.
            2: Migrate client-connection even if server-connection was accidentally dropped. (Potential data losses)
            </summary>
        </member>
        <member name="P:Microsoft.Azure.SignalR.ServiceOptions.Proxy">
            <summary>
            Gets or sets the proxy used when ServiceEndpoint will attempt to connect to Azure SignalR.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.SignalR.ServiceOptions.ServiceScaleTimeout">
            <summary>
            Gets or sets timeout waiting when scale multiple Azure SignalR Service endpoints.
            Default value is 5 minutes
            </summary>
        </member>
        <member name="P:Microsoft.Azure.SignalR.ServiceOptions.MaxPollIntervalInSeconds">
            <summary>
            Gets or sets the interval in seconds used by the Azure SignalR Service to timeout idle LongPolling connections.
            Default value is 5, limited to [1, 300].
            </summary>
        </member>
        <member name="P:Microsoft.Azure.SignalR.ServiceOptions.TransportTypeDetector">
            <summary>
            Gets or sets a function which accepts <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> and returns a bitmask combining one or more <see cref="T:Microsoft.AspNetCore.Http.Connections.HttpTransportType"/> values that specify what transports the service should use to receive HTTP requests.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.SignalR.ServiceOptions.AllowStatefulReconnects">
            <summary>
            Allow clients enable stateful reconnects for all hubs.
            By default is disabled.
            It can also configurate <see cref="T:Microsoft.AspNetCore.Http.Connections.HttpConnectionDispatcherOptions"/> by hub in net 8.
            Enable stateful reconnection in client side:
            * Make sure client sdk is net8 or later.
            * Enable stateful reconnect in client side, e.g.: <code>builder.withStatefulReconnect()</code>
            </summary>
        </member>
        <member name="T:Microsoft.Azure.SignalR.ServiceRouteBuilder">
            <summary>
            Maps incoming requests to <see cref="T:Microsoft.AspNetCore.SignalR.Hub"/> types.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.SignalR.ServiceRouteBuilder.#ctor(Microsoft.AspNetCore.Routing.RouteBuilder)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Azure.SignalR.ServiceRouteBuilder"/> class.
            </summary>
            <param name="routes">The routes builder.</param>
        </member>
        <member name="M:Microsoft.Azure.SignalR.ServiceRouteBuilder.MapHub``1(System.String)">
            <summary>
            Maps incoming requests with the specified path to the specified <see cref="T:Microsoft.AspNetCore.SignalR.Hub"/> type.
            </summary>
            <typeparam name="THub">The <see cref="T:Microsoft.AspNetCore.SignalR.Hub"/> type to map requests to.</typeparam>
            <param name="path">The request path.</param>
        </member>
        <member name="M:Microsoft.Azure.SignalR.ServiceRouteBuilder.MapHub``1(Microsoft.AspNetCore.Http.PathString)">
            <summary>
            Maps incoming requests with the specified path to the specified <see cref="T:Microsoft.AspNetCore.SignalR.Hub"/> type.
            </summary>
            <typeparam name="THub">The <see cref="T:Microsoft.AspNetCore.SignalR.Hub"/> type to map requests to.</typeparam>
            <param name="path">The request path.</param>
        </member>
        <member name="T:Microsoft.Azure.SignalR.MemoryBufferWriter.CompletedBuffer">
            <summary>
            Holds a byte[] from the pool and a size value. Basically a Memory but guaranteed to be backed by an ArrayPool byte[], so that we know we can return it.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.AzureSignalRDependencyInjectionExtensions">
            <summary>
            Extension methods for <see cref="T:Microsoft.AspNetCore.SignalR.ISignalRServerBuilder"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AzureSignalRDependencyInjectionExtensions.AddAzureSignalR(Microsoft.AspNetCore.SignalR.ISignalRServerBuilder)">
            <summary>
            Adds the minimum essential Azure SignalR services to the specified <see cref="T:Microsoft.AspNetCore.SignalR.ISignalRServerBuilder" />.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.AspNetCore.SignalR.ISignalRServerBuilder"/>.</param>
            <returns>The same instance of the <see cref="T:Microsoft.AspNetCore.SignalR.ISignalRServerBuilder"/> for chaining.</returns>
            <remarks>
            It reads connection string from a configuration entry Azure:SignalR:ConnectionString.
            In development environment, try `dotnet user-secrets set Azure:SignalR:ConnectionString {YourConnectionString}`.
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AzureSignalRDependencyInjectionExtensions.AddNamedAzureSignalR(Microsoft.AspNetCore.SignalR.ISignalRServerBuilder,System.String)">
            <summary>
            Add Azure SignalR with specified name, the connection string will be read from ConnectionStrings_{name}, the settings are loaded from Azure:SignalR:{name} section
            </summary>
            <param name="builder">The <see cref="T:Microsoft.AspNetCore.SignalR.ISignalRServerBuilder"/>.</param>
            <param name="name">The name of the Azure SignalR service that settings and connection strings are read from</param>
            <returns>The same instance of the <see cref="T:Microsoft.AspNetCore.SignalR.ISignalRServerBuilder"/> for chaining.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AzureSignalRDependencyInjectionExtensions.AddAzureSignalR(Microsoft.AspNetCore.SignalR.ISignalRServerBuilder,System.String)">
            <summary>
            Adds the minimum essential Azure SignalR services to the specified <see cref="T:Microsoft.AspNetCore.SignalR.ISignalRServerBuilder" />.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.AspNetCore.SignalR.ISignalRServerBuilder"/>.</param>
            <param name="connectionString">The connection string of an Azure SignalR Service instance.</param>
            <returns>The same instance of the <see cref="T:Microsoft.AspNetCore.SignalR.ISignalRServerBuilder"/> for chaining.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AzureSignalRDependencyInjectionExtensions.AddAzureSignalR(Microsoft.AspNetCore.SignalR.ISignalRServerBuilder,System.Action{Microsoft.Azure.SignalR.ServiceOptions})">
            <summary>
            Adds the minimum essential Azure SignalR services to the specified <see cref="T:Microsoft.AspNetCore.SignalR.ISignalRServerBuilder" />.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.AspNetCore.SignalR.ISignalRServerBuilder"/>.</param>
            <param name="configure">A callback to configure the <see cref="T:Microsoft.Azure.SignalR.ServiceOptions"/>.</param>
            <returns>The same instance of the <see cref="T:Microsoft.AspNetCore.SignalR.ISignalRServerBuilder"/> for chaining.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.AzureSignalRDependencyInjectionExtensions.AddAzureSignalR``1(Microsoft.AspNetCore.SignalR.ISignalRServerBuilder)">
            <typeparam name="TOptionsSetup">The set up class used to configure <see cref="T:Microsoft.Azure.SignalR.ServiceOptions"/> and track changes.</typeparam>
        </member>
    </members>
</doc>
